name: CI-CD_Pipeline-to-AWS-ElasticBeanstalk
env:
  EB_PACKAGE_S3_BUCKET_NAME : "github-flask-application-package"
  EB_APPLICATION_NAME       : "MyFlask-"
  EB_ENVIRONMENT_NAME       : "MyFlask-env"
  DEPLOY_PACKAGE_NAME       : "flask_app${{ github.sha }}.zip"
  AWS_REGION_NAME           : "eu-west-1"

on: 
  push: 
    branches: 
      - master

jobs:
  ci-pipeline:
    runs-on: ubuntu-latest
    
    steps:
      - name: Git clone repo
        uses: actions/checkout@v1
      
      - name: Create ZIP deployment pakage
        run: zip -r ${{ env.DEPLOY_PACKAGE_NAME }} ./ -x *.git*
    
      - name: Configure my AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
          aws-region           : ${{env.AWS_REGION_NAME}}
          
      - name: Copy Deployment package to S3 bucket
        run: aws s3 cp ${{ env.DEPLOY_PACKAGE_NAME }} s3://${{ env.EB_PACKAGE_S3_BUCKET_NAME }}/
        
      - name: Print Message for CI
        run: echo " CI Pipeline part finished successfully"


  cd-pipeline:
    runs-on: ubuntu-latest
    needs: [ci-pipeline]  
    
    steps:
    - name: Configure my AWS Credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id    : ${{ secrets.AWS_ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_KEY }}
        aws-region           : ${{env.AWS_REGION_NAME}}
  
    - name: Create new ElasticBeanstalk Application
      run : |
        aws elasticbeanstalk create-application-version \
        --application-name ${{ env.EB_APPLICATION_NAME }} \
        --source-bundle S3Bucket="${{ env.EB_PACKAGE_S3_BUCKET_NAME }}",S3Key="${{ env.DEPLOY_PACKAGE_NAME }}" \
        --version-label "ver-${{ github.sha }}" \
        --description "CommitSHA-${{ github.sha }}"
        
    - name: Deploy new ElasticBeanstalk Application Version
      run : aws elasticbeanstalk update-environment --environment-name ${{ env.EB_ENVIRONMENT_NAME }} --version-label "ver-${{ github.sha }}"
      
    - name: Print Message
      run: echo "CD Pipeline Finished Successfully!!"
        
        
        
        
        
        
        
        
        
        
        
    
    
    
    
    
